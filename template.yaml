AWSTemplateFormatVersion: '2010-09-09'
Description: 'Enterprise-grade guardrail for SQS queue security compliance checks'

Parameters:
  LambdaRuntime:
    Type: String
    Default: python3.9
    Description: The runtime version for the Lambda function
    AllowedValues:
      - python3.8
      - python3.9
      - python3.10
      - python3.11
  
  LambdaMemorySize:
    Type: Number
    Default: 128
    Description: Memory allocation for the Lambda function (MB)
    MinValue: 128
    MaxValue: 10240
  
  PermissionBoundaryARN:
    Type: String
    Description: ARN of the permission boundary to apply to the Lambda execution role
  
  SNSTopicARN:
    Type: String
    Default: ''
    Description: Optional ARN of existing SNS topic for alerts. If empty, a new topic will be created.
  
  OrganizationalUnit:
    Type: String
    Description: Organizational Unit identifier for Control Tower guardrail

Conditions:
  CreateSNSTopic: !Equals [!Ref SNSTopicARN, '']

Resources:
  # IAM Role for Lambda execution with permission boundary
  SQSGuardrailLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      PermissionsBoundary: !Ref PermissionBoundaryARN
      Policies:
        - PolicyName: SQSGuardrailLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:GetQueueAttributes
                  - sqs:ListQueueTags
                  - sqs:ListDeadLetterSourceQueues
                Resource: '*'
              - Effect: Allow
                Action:
                  - ec2:DescribeVpcEndpoints
                Resource: '*'
              - Effect: Allow
                Action:
                  - kms:DescribeKey
                Resource: '*'
              - Effect: Allow
                Action: 
                  - sns:Publish
                Resource: !If 
                  - CreateSNSTopic
                  - !Ref SQSGuardrailSNSTopic
                  - !Ref SNSTopicARN
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/SQSGuardrailFunction*'

  # Lambda function for SQS guardrail checks
  SQSGuardrailFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: SQSGuardrailFunction
      Description: Validates SQS queue security configurations
      Runtime: !Ref LambdaRuntime
      Handler: lambda_function.lambda_handler
      MemorySize: !Ref LambdaMemorySize
      Timeout: 30
      Role: !GetAtt SQSGuardrailLambdaRole.Arn
      Environment:
        Variables:
          SNS_TOPIC_ARN: !If [CreateSNSTopic, !Ref SQSGuardrailSNSTopic, !Ref SNSTopicARN]
      Code:
        ZipFile: |
          # This is a placeholder. Actual code is in lambda_function directory.
          # During deployment, this will be replaced with the actual code from lambda_function.py
          def lambda_handler(event, context):
              return {"status": "placeholder"}
  
  # EventBridge rule to trigger Lambda on SQS queue creation
  SQSGuardrailEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: SQSGuardrailEventRule
      Description: Triggers Lambda function when new SQS queues are created
      EventPattern:
        source:
          - aws.sqs
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          eventSource:
            - sqs.amazonaws.com
          eventName:
            - CreateQueue
      State: ENABLED
      Targets:
        - Arn: !GetAtt SQSGuardrailFunction.Arn
          Id: SQSGuardrailTarget
  
  # Permission for EventBridge to invoke Lambda
  SQSGuardrailEventRulePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SQSGuardrailFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt SQSGuardrailEventRule.Arn
  
  # SNS Topic for alerts (created only if SNSTopicARN is not provided)
  SQSGuardrailSNSTopic:
    Type: AWS::SNS::Topic
    Condition: CreateSNSTopic
    Properties:
      TopicName: SQSGuardrailAlerts
      DisplayName: SQS Guardrail Alerts
      Tags:
        - Key: Name
          Value: SQSGuardrailAlerts
        - Key: Purpose
          Value: SecurityCompliance
  
  # Control Tower enabled control for SQS DLQ requirement in us-east-1
  SQSGuardrailControlTowerControl:
    Type: AWS::ServiceCatalog::CloudFormationProvisionedProduct
    Properties:
      ProductName: SQS-DLQ-Required
      ProvisionedProductName: SQS-DLQ-Required-Control
      ProvisioningArtifactName: SQS Dead Letter Queue Required Control
      ProvisioningParameters:
        - Key: OrganizationalUnit
          Value: !Ref OrganizationalUnit
        - Key: Region
          Value: us-east-1
      Tags:
        - Key: Name
          Value: SQS-DLQ-Required-Control
        - Key: CloudGuardrail
          Value: SQSCompliance

Outputs:
  LambdaFunctionName:
    Description: Name of the SQS Guardrail Lambda function
    Value: !Ref SQSGuardrailFunction
  
  SNSTopicARN:
    Description: ARN of the SNS topic for alerts
    Value: !If [CreateSNSTopic, !Ref SQSGuardrailSNSTopic, !Ref SNSTopicARN]
  
  EventRuleName:
    Description: Name of the EventBridge rule
    Value: !Ref SQSGuardrailEventRule