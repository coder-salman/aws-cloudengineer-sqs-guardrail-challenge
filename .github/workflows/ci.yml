
#test account personal aws acocunt:2 (billing rbc card; credit remaining $135)

name: SQS Guardrail CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy to AWS after testing'
        type: boolean
        default: false

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest boto3 moto
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Lint Python code with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 ./lambda_function/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 ./lambda_function/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      

  
  package-and-deploy:
    name: Package and Deploy
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.deploy == 'true' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Create Lambda deployment package
        run: |
          mkdir -p deployment
          cp -r lambda_function/* deployment/
          cd deployment
          pip install -t . boto3
          zip -r ../lambda_deployment.zip *
      
      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation package \
            --template-file template.yaml \
            --s3-bucket ${{ secrets.DEPLOYMENT_BUCKET }} \
            --output-template-file packaged-template.yaml
          
          aws cloudformation deploy \
            --template-file packaged-template.yaml \
            --stack-name SQSGuardrailStack \
            --parameter-overrides \
              LambdaRuntime=python3.9 \
              LambdaMemorySize=128 \
              PermissionBoundaryARN=${{ secrets.PERMISSION_BOUNDARY_ARN }} \
              OrganizationalUnit=${{ secrets.ORGANIZATIONAL_UNIT }} \
            --capabilities CAPABILITY_NAMED_IAM